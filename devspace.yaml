version: v1beta11

vars:
  - name: APP
    value: myreads
  - name: IMAGE
    value: pratikjagrut/myreads
  - name: DB_IMAGE
    value: mariadb

images:
  backend:
    image: ${IMAGE}

deployments:
- name: configurations
  kubectl:
    manifests:
    - manifests/
- name: ${DB_IMAGE}
  helm:
    componentChart: true
    values:
      containers:
      - env:
        - name: MARIADB_ROOT_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: ${DB_IMAGE}-configmap
              key: MARIADB_ROOT_PASSWORD
        - name: MARIADB_DATABASE
          valueFrom:
            configMapKeyRef:
              name: ${DB_IMAGE}-configmap
              key: MARIADB_DATABASE
        - name: MARIADB_USER
          valueFrom:
            configMapKeyRef:
              name: ${DB_IMAGE}-configmap
              key: MARIADB_USER 
        - name: MARIADB_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: ${DB_IMAGE}-configmap
              key: MARIADB_PASSWORD 
        image: ${DB_IMAGE}:latest
        volumeMounts:
        - containerPath: /var/lib/${APP}
          volume:
            name: ${APP}-data
            subPath: /${APP}
      service:
        name: ${DB_IMAGE}-service
        ports:
        - port: 3306
      volumes:
      - name: ${APP}-data
        size: 5Gi
- name: ${APP}-backend
  helm:
    componentChart: true
    values:
      containers:
      - image: ${IMAGE}
        env:
        - name: DB_HOST
          value: ${DB_IMAGE}-service
        - name: DB_PORT
          value: "3306"
        - name: DB_NAME
          value: ${APP}
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              name: ${DB_IMAGE}-configmap
              key: MARIADB_USER 
        - name: DB_PASS
          valueFrom:
            configMapKeyRef:
              name: ${DB_IMAGE}-configmap
              key: MARIADB_PASSWORD
      service:
        ports:
        - port: 8000

dev:

  ports:
  - imageSelector: ${IMAGE}
    forward:
    - port: 8000
  - imageSelector: ${DB_IMAGE}
    forward:
    - port: 3306

  sync:
  - imageSelector: ${IMAGE}
    excludePaths:
    - .git/

  terminal:
    imageSelector: ${IMAGE}
    command:
    - ./devspace_start.sh

  replacePods:
  - imageSelector: ${IMAGE}
    replaceImage: loftsh/go:latest
    patches:
    - op: replace
      path: spec.containers[0].command
      value:
      - sleep
    - op: replace
      path: spec.containers[0].args
      value:
      - "9999999"
    - op: remove
      path: spec.containers[0].securityContext

profiles:
- name: production
  merge:
    images:
      app:
        image: ${IMAGE}
        dockerfile: ./Dockerfile
